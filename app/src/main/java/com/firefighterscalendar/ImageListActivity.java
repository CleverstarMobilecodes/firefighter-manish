package com.firefighterscalendar;import android.content.Intent;import android.os.AsyncTask;import android.os.Bundle;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.view.View;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.firefighterscalendar.adapter.ImageSavedAdapter;import com.firefighterscalendar.bean.ImageListBean;import com.firefighterscalendar.utils.AllAPICall;import com.firefighterscalendar.utils.onTaskComplete;import com.google.gson.Gson;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;import java.util.List;public class ImageListActivity extends BaseActivity {    private Toolbar toolbar;    private LinearLayout layoutRight;    private RecyclerView recyclerView;    private ImageSavedAdapter adapter;    private HashMap<String, String> stringHashMap;    private List<ImageListBean> listImages;    private TextView textNoResult;    private TextView textHeader;    private int pageNo = 1, flag = 1;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_image_list);        initControls();    }    private void initControls() {        listImages = new ArrayList<>();        toolbar = (Toolbar) findViewById(R.id.toolbar_inner);        setSupportActionBar(toolbar);        getSupportActionBar().setTitle("");        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });        layoutRight = (LinearLayout) toolbar.findViewById(R.id.layoutRight);        layoutRight.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(ImageListActivity.this, MainActivity.class);                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);                startActivity(intent);            }        });        textHeader = (TextView) findViewById(R.id.textHeader);        textNoResult = (TextView) findViewById(R.id.textNoResult);        textHeader.setText(getIntent().getStringExtra("title"));        recyclerView = (RecyclerView) findViewById(R.id.recycleviewImages);        recyclerView.setHasFixedSize(false);        RecyclerView.LayoutManager layoutManager = new GridLayoutManager(getApplicationContext(), 2);        recyclerView.setLayoutManager(layoutManager);        recyclerView.addOnScrollListener(onScrollListener);    }    @Override    protected void onResume() {        super.onResume();        adapter = new ImageSavedAdapter(ImageListActivity.this, listImages, sessionManager.getStringDetail("subscription"));        recyclerView.setAdapter(adapter);        if (utility.checkInternetConnection()) {            pageNo = 1;            listImages.clear();            getAllImages(true);        }    }    private void getAllImages(boolean b) {        stringHashMap = new HashMap<>();        stringHashMap.put("iAlbumId", getIntent().getStringExtra("id"));        stringHashMap.put("offset", "" + pageNo);        stringHashMap.put("iUserId", sessionManager.getStringDetail("iUserId"));        new AllAPICall(this, stringHashMap, null, new onTaskComplete() {            @Override            public void onComplete(String response) {                try {                    JSONArray jsonArray = new JSONArray(response);                    JSONObject jsonObject = jsonArray.getJSONObject(0);                    if (jsonObject.getInt("response_status") == 1) {                        JSONArray arrayResult = jsonObject.getJSONArray("result");                        Gson gson = new Gson();                        for (int i = 0; i < arrayResult.length(); i++) {                            ImageListBean imageListBean;                            imageListBean = gson.fromJson(arrayResult.getJSONObject(i).toString(), ImageListBean.class);                            imageListBean.title = getIntent().getStringExtra("title");                            listImages.add(imageListBean);                        }                        adapter.notifyDataSetChanged();                        if (arrayResult.length() > 0) {                            recyclerView.setVisibility(View.VISIBLE);                            textNoResult.setVisibility(View.GONE);                        } else {                            if (!listImages.isEmpty()) {                                flag = -1;                            } else {                                recyclerView.setVisibility(View.GONE);                                textNoResult.setVisibility(View.VISIBLE);                            }                        }                        pageNo = jsonObject.getInt("offset");                    } else {                        Toast.makeText(ImageListActivity.this, jsonObject.getString("msg"), Toast.LENGTH_SHORT).show();                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        }, b).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, URL_GET_ALL_ALBUM_IMAGES);    }    RecyclerView.OnScrollListener onScrollListener = new RecyclerView.OnScrollListener() {        @Override        public void onScrollStateChanged(RecyclerView recyclerView, int newState) {            super.onScrollStateChanged(recyclerView, newState);            if (newState == RecyclerView.SCROLL_STATE_IDLE && flag == 1) {                if (utility.checkInternetConnection())                    getAllImages(false);            }        }    };}